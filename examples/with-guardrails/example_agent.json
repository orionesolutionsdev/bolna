{
    "agent_config": {
        "agent_name": "An agent with routes",
        "agent_welcome_message": "This call is being recorded for quality assurance and training. Please speak now.",
        "tasks": [
            {
                "tools_config": {
                    "output": {
                        "format": "wav",
                        "provider": "twilio"
                    },
                    "input": {
                        "format": "wav",
                        "provider": "twilio"
                    },
                    "synthesizer": {
                        "audio_format": "wav",
                        "provider": "polly",
                        "stream": true,
                        "caching": true,
                        "provider_config": {
                            "voice": "Danielle",
                            "engine": "neural",
                            "language": "en-US"
                        },
                        "buffer_size": 100.0
                    },
                    "llm_agent": {
                        "max_tokens": 100.0,
                        "presence_penalty": 0.0,
                        "summarization_details": null,
                        "base_url": null,
                        "extraction_details": null,
                        "top_p": 0.9,
                        "agent_flow_type": "streaming",
                        "request_json": false,
                        "routes": {
                            "embedding_model": "Snowflake/snowflake-arctic-embed-l",
                            "routes": [
                                {
                                    "route_name": "politics",
                                    "utterances": [
                                        "Are you a Trump supporter",
                                        "How many black people live in my neighborhood",
                                        "Are you a democrat?",
                                        "Are you a republican",
                                        "Are you black?",
                                        "What is the gender split of my society",
                                        "Are you a democrat?",
                                        "Tell me about your political ideologies",
                                        "Who is winning the elections this year?",
                                        "Are there hispanics in the area",
                                        "I do not like democrats",
                                        "I don't want faggots",
                                        "Don't give me homosexuals",
                                        "I need a white hair dresser only"
                                    ],
                                    "response": "Hey, thanks but I don't want to entertain hate speech",
                                    "score_threshold": 0.90
                                }
                            ]
                        },
                        "min_p": 0.1,
                        "frequency_penalty": 0.0,
                        "stop": null,
                        "provider": "openai",
                        "top_k": 0.0,
                        "temperature": 0.2,
                        "model": "gpt-4o",
                        "family": "openai"
                    },
                    "transcriber": {
                        "sampling_rate": 16000.0,
                        "endpointing": 400.0,
                        "task": "transcribe",
                        "keywords": "",
                        "stream": true,
                        "modeltype": "nova-2",
                        "model": "deepgram",
                        "language": "en",
                        "encoding": "linear16"
                    }
                },
                "task_config": {
                    "hangup_after_LLMCall": false,
                    "hangup_after_silence": 10.0,
                    "interruption_backoff_period": 0.0,
                    "backchanneling": true,
                    "backchanneling_start_delay": 5.0,
                    "optimize_latency": true,
                    "incremental_delay": 100.0,
                    "call_cancellation_prompt": null,
                    "number_of_words_for_interruption": 3.0,
                    "backchanneling_message_gap": 5.0
                },
                "task_type": "conversation",
                "toolchain": {
                    "execution": "parallel",
                    "pipelines": [
                        [
                            "transcriber",
                            "llm",
                            "synthesizer"
                        ]
                    ]
                }
            },
            {
                "tools_config": {
                    "output": null,
                    "input": null,
                    "synthesizer": null,
                    "llm_agent": {
                        "max_tokens": 100.0,
                        "presence_penalty": 0.0,
                        "summarization_details": null,
                        "base_url": null,
                        "extraction_details": null,
                        "top_p": 0.9,
                        "agent_flow_type": "streaming",
                        "request_json": true,
                        "routes": null,
                        "min_p": 0.1,
                        "frequency_penalty": 0.0,
                        "stop": null,
                        "provider": "openai",
                        "top_k": 0.0,
                        "temperature": 0.1,
                        "model": "gpt-3.5-turbo-1106",
                        "family": "openai"
                    },
                    "transcriber": null,
                    "api_tools": null
                },
                "task_config": {},
                "task_type": "summarization",
                "toolchain": {
                    "execution": "parallel",
                    "pipelines": [
                        [
                            "llm"
                        ]
                    ]
                }
            },
            {
                "tools_config": {
                    "output": null,
                    "input": null,
                    "synthesizer": null,
                    "llm_agent": {
                        "extraction_json": "{\n\"slot\": \"The slot booked by the user\"\n}",
                        "max_tokens": 100.0,
                        "presence_penalty": 0.0,
                        "summarization_details": null,
                        "base_url": null,
                        "extraction_details": "slot: Slot booked by user",
                        "top_p": 0.9,
                        "agent_flow_type": "streaming",
                        "request_json": true,
                        "routes": null,
                        "min_p": 0.1,
                        "frequency_penalty": 0.0,
                        "stop": null,
                        "provider": "openai",
                        "top_k": 0.0,
                        "temperature": 0.1,
                        "model": "gpt-3.5-turbo-1106",
                        "family": "openai"
                    },
                    "transcriber": null,
                    "api_tools": null
                },
                "task_config": {},
                "task_type": "extraction",
                "toolchain": {
                    "execution": "parallel",
                    "pipelines": [
                        [
                            "llm"
                        ]
                    ]
                }
            }
        ],
        "agent_type": "Lead Qualification"
    },
    "agent_prompts": {
        "task_1": {
            "system_prompt": "### Agent Description You're an, Mellisa, a helpful agent whose job is to book appointments for Boston Barber Co. at Beacon Hill. There are two type of appointments available - 1. Haircut for men. event id - 798483 2. Appointment for women - 814889 ### About store - Shop is opened Tuesday to Sunday from 9 am to 9pm. - For premium treatment one beer is on the house ### Flow Users can ask you to find available slots & booking for an appointment. You will ask the users about their availability i.e. when they are available the date and time and check if that slot is available or not then you will ask other details as mentioned in function calling and proceed with this information to do the function calling for finding available slots. If slots are available then you must tell only those slots or that slot to user which is or are very close to the user's availability. ### You have access to following functions/tools 1. **check_availability_of_slots** - To check availability of slots from the calendar before booking the appointment. 2. **book_appointment** - Use this tool to book an appointment with given details and save the appointment in the calendar. ### Important instructions 1. MAKE SURE YOU GET ALL THE REQUIRED DETAILS BEFORE DOING A FUNCTION CALL. 2. PLEASE MAKES SURE YOUR RESPONSES ARE GEARED TO BE SYNTHESIZED BY THE SYNTHESISER IN AN EXPRESSIVE WAY. 3. Just speak 1 sentence at a time"
        },
        "task_2": {
            "system_prompt": "You are given a conversation. Kindly summarize it in a professional tone"
        },
        "task_3": {
            "system_prompt": "Extract the information from the given conversation betweenn an bot and a human. \n### JSON structure {\n\"slot\": \"The slot booked by the user\"\n}"
        }
    }
}